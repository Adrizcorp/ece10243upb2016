// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus II 64-Bit Version 15.0 (Build Build 145 04/22/2015)
// Created on Tue Jun 07 09:25:15 2016

picoctrl picoctrl_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.res_n(res_n_sig) ,	// input  res_n_sig
	.cond_1(cond_1_sig) ,	// input  cond_1_sig
	.cond_2(cond_2_sig) ,	// input  cond_2_sig
	.cond_3(cond_3_sig) ,	// input  cond_3_sig
	.cond_4(cond_4_sig) ,	// input  cond_4_sig
	.cond_5(cond_5_sig) ,	// input  cond_5_sig
	.cond_6(cond_6_sig) ,	// input  cond_6_sig
	.reg_0(reg_0_sig) ,	// output [7:0] reg_0_sig
	.reg_1(reg_1_sig) ,	// output [7:0] reg_1_sig
	.reg_2(reg_2_sig) ,	// output [7:0] reg_2_sig
	.reg_3(reg_3_sig) ,	// output [7:0] reg_3_sig
	.instruction_ROM_Addr(instruction_ROM_Addr_sig) ,	// output [4:0] instruction_ROM_Addr_sig
	.instruction_ROM_data(instruction_ROM_data_sig) 	// input [15:0] instruction_ROM_data_sig
);

