
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module FSM(

	//////////// CLOCK //////////
	input 		          		FPGA_CLK1_50,
	input 		          		FPGA_CLK2_50,
	input 		          		FPGA_CLK3_50,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [7:0]		LED,

	//////////// SW //////////
	input 		     [3:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================


wire clk_1hz;
wire sync_key;
wire [31:0]resultado;
//=======================================================
//  Structural coding
//=======================================================


div_freq div_freq_inst
(
	.clk(FPGA_CLK1_50) ,	// input  clk_sig
	.in(32'd24999999) ,	// input [31:0] in_sig
	.div(clk_1hz) 	// output  div_sig
);


syncro syncro_inst
(
	.async(KEY[0]) ,	// input  async_sig
	.clock(clk_1hz) ,	// input  clock_sig
	.sync(sync_key) 	// output  sync_sig
);


fsm_secuencia fsm_secuencia_inst
(
	.clk(clk_1hz) ,	// input  clk_sig
	.start(sync_key) ,	// input  start_sig
	.sw_0(SW[0]) ,	// input  sw_0_sig
	.finish() ,	// output  finish_sig
	.idle() ,	// output  idle_sig
	.leds() 	// output [7:0] leds_sig
);

assign LED[7:0]= (SW[3:2]==2'b00)? resultado[7:0]:
					  (SW[3:2]==2'b01)? resultado[15:8]:
					  (SW[3:2]==2'b10)? resultado[23:16]:
					  resultado[31:24];

fp_sum_res	fp_sum_res_inst (
	.clk_en (SW[1]),
	.clock ( FPGA_CLK1_50),
	.dataa ( 32'h40247ae1),//2.57
	.datab (  32'hc0e33333),//-7.1
	.result ( resultado[31:0] )
	);




endmodule
