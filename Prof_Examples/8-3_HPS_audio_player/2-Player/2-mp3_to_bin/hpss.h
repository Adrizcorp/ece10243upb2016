#ifndef _ALTERA_HPS_H_
#define _ALTERA_HPS_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'hps_fpga' in
 * file './hps_fpga.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'sw', class 'altera_avalon_pio'
 * The macros are prefixed with 'SW_'.
 * The prefix is the slave descriptor.
 */
#define SW_COMPONENT_TYPE altera_avalon_pio
#define SW_COMPONENT_NAME sw
#define SW_BASE 0x0
#define SW_SPAN 32
#define SW_END 0x1f
#define SW_BIT_CLEARING_EDGE_REGISTER 0
#define SW_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SW_CAPTURE 0
#define SW_DATA_WIDTH 10
#define SW_DO_TEST_BENCH_WIRING 0
#define SW_DRIVEN_SIM_VALUE 0
#define SW_EDGE_TYPE NONE
#define SW_FREQ 50000000
#define SW_HAS_IN 1
#define SW_HAS_OUT 0
#define SW_HAS_TRI 0
#define SW_IRQ_TYPE NONE
#define SW_RESET_VALUE 0

/*
 * Macros for device 'led', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_'.
 * The prefix is the slave descriptor.
 */
#define LED_COMPONENT_TYPE altera_avalon_pio
#define LED_COMPONENT_NAME led
#define LED_BASE 0x10
#define LED_SPAN 32
#define LED_END 0x2f
#define LED_BIT_CLEARING_EDGE_REGISTER 0
#define LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_CAPTURE 0
#define LED_DATA_WIDTH 10
#define LED_DO_TEST_BENCH_WIRING 0
#define LED_DRIVEN_SIM_VALUE 0
#define LED_EDGE_TYPE NONE
#define LED_FREQ 50000000
#define LED_HAS_IN 0
#define LED_HAS_OUT 1
#define LED_HAS_TRI 0
#define LED_IRQ_TYPE NONE
#define LED_RESET_VALUE 1023

/*
 * Macros for device 'div_freq', class 'altera_avalon_pio'
 * The macros are prefixed with 'DIV_FREQ_'.
 * The prefix is the slave descriptor.
 */
#define DIV_FREQ_COMPONENT_TYPE altera_avalon_pio
#define DIV_FREQ_COMPONENT_NAME div_freq
#define DIV_FREQ_BASE 0x20
#define DIV_FREQ_SPAN 32
#define DIV_FREQ_END 0x3f
#define DIV_FREQ_BIT_CLEARING_EDGE_REGISTER 0
#define DIV_FREQ_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DIV_FREQ_CAPTURE 0
#define DIV_FREQ_DATA_WIDTH 32
#define DIV_FREQ_DO_TEST_BENCH_WIRING 0
#define DIV_FREQ_DRIVEN_SIM_VALUE 0
#define DIV_FREQ_EDGE_TYPE NONE
#define DIV_FREQ_FREQ 50000000
#define DIV_FREQ_HAS_IN 0
#define DIV_FREQ_HAS_OUT 1
#define DIV_FREQ_HAS_TRI 0
#define DIV_FREQ_IRQ_TYPE NONE
#define DIV_FREQ_RESET_VALUE 0

/*
 * Macros for device 'key', class 'altera_avalon_pio'
 * The macros are prefixed with 'KEY_'.
 * The prefix is the slave descriptor.
 */
#define KEY_COMPONENT_TYPE altera_avalon_pio
#define KEY_COMPONENT_NAME key
#define KEY_BASE 0x40
#define KEY_SPAN 32
#define KEY_END 0x5f
#define KEY_BIT_CLEARING_EDGE_REGISTER 0
#define KEY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define KEY_CAPTURE 0
#define KEY_DATA_WIDTH 4
#define KEY_DO_TEST_BENCH_WIRING 0
#define KEY_DRIVEN_SIM_VALUE 0
#define KEY_EDGE_TYPE NONE
#define KEY_FREQ 50000000
#define KEY_HAS_IN 1
#define KEY_HAS_OUT 0
#define KEY_HAS_TRI 0
#define KEY_IRQ_TYPE NONE
#define KEY_RESET_VALUE 0

/*
 * Macros for device 'fifo_0_out', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_0_OUT_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_0_OUT_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_0_OUT_COMPONENT_NAME fifo_0
#define FIFO_0_OUT_BASE 0x100
#define FIFO_0_OUT_SPAN 4
#define FIFO_0_OUT_END 0x103
#define FIFO_0_OUT_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_0_OUT_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_0_OUT_BITS_PER_SYMBOL 16
#define FIFO_0_OUT_CHANNEL_WIDTH 8
#define FIFO_0_OUT_ERROR_WIDTH 8
#define FIFO_0_OUT_FIFO_DEPTH 256
#define FIFO_0_OUT_SINGLE_CLOCK_MODE 0
#define FIFO_0_OUT_SYMBOLS_PER_BEAT 2
#define FIFO_0_OUT_USE_AVALONMM_READ_SLAVE 1
#define FIFO_0_OUT_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_0_OUT_USE_AVALONST_SINK 0
#define FIFO_0_OUT_USE_AVALONST_SOURCE 0
#define FIFO_0_OUT_USE_BACKPRESSURE 1
#define FIFO_0_OUT_USE_IRQ 0
#define FIFO_0_OUT_USE_PACKET 1
#define FIFO_0_OUT_USE_READ_CONTROL 1
#define FIFO_0_OUT_USE_REGISTER 0
#define FIFO_0_OUT_USE_WRITE_CONTROL 0

/*
 * Macros for device 'fifo_0_out_csr', class 'altera_avalon_fifo'
 * The macros are prefixed with 'FIFO_0_OUT_CSR_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_0_OUT_CSR_COMPONENT_TYPE altera_avalon_fifo
#define FIFO_0_OUT_CSR_COMPONENT_NAME fifo_0
#define FIFO_0_OUT_CSR_BASE 0x120
#define FIFO_0_OUT_CSR_SPAN 32
#define FIFO_0_OUT_CSR_END 0x13f
#define FIFO_0_OUT_CSR_AVALONMM_AVALONMM_DATA_WIDTH 32
#define FIFO_0_OUT_CSR_AVALONMM_AVALONST_DATA_WIDTH 32
#define FIFO_0_OUT_CSR_BITS_PER_SYMBOL 16
#define FIFO_0_OUT_CSR_CHANNEL_WIDTH 8
#define FIFO_0_OUT_CSR_ERROR_WIDTH 8
#define FIFO_0_OUT_CSR_FIFO_DEPTH 256
#define FIFO_0_OUT_CSR_SINGLE_CLOCK_MODE 0
#define FIFO_0_OUT_CSR_SYMBOLS_PER_BEAT 2
#define FIFO_0_OUT_CSR_USE_AVALONMM_READ_SLAVE 1
#define FIFO_0_OUT_CSR_USE_AVALONMM_WRITE_SLAVE 1
#define FIFO_0_OUT_CSR_USE_AVALONST_SINK 0
#define FIFO_0_OUT_CSR_USE_AVALONST_SOURCE 0
#define FIFO_0_OUT_CSR_USE_BACKPRESSURE 1
#define FIFO_0_OUT_CSR_USE_IRQ 0
#define FIFO_0_OUT_CSR_USE_PACKET 1
#define FIFO_0_OUT_CSR_USE_READ_CONTROL 1
#define FIFO_0_OUT_CSR_USE_REGISTER 0
#define FIFO_0_OUT_CSR_USE_WRITE_CONTROL 0


#endif /* _ALTERA_HPS_H_ */
